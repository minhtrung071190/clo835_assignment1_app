name: CI-CD of ECR

on:
  pull_request:
    types: [closed]  # Use brackets for proper syntax
    branches: [main]

env:
  AWS_REGION: us-east-1  
  ECR_REPOSITORY_APP: assignmentdocker-dev-ecr-repo  
  ECR_REPOSITORY_MYSQL: assignmentdocker-dev-mysql-ecr-repo  

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}  # Only include if using temporary credentials

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push application image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_APP:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_APP:$IMAGE_TAG

    - name: Build, tag, and push MySQL image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_MYSQL:$IMAGE_TAG -f Dockerfile.mysql .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_MYSQL:$IMAGE_TAG
