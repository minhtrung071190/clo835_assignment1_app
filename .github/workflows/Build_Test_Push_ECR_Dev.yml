name: Build, Test, and Publish Image to ECR
# updated ECR Repo  01/23
on: 
  push:
    branches: [ dev ]

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v4

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: us-east-1

    - name: Build, test, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: clo835-assignment1-repository
        IMAGE_TAG: ${{ github.run_number }}-${{ github.sha }}
      run: |
        ls -ltra
        # Docker build command
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:mysql-$IMAGE_TAG -f Dockerfile_mysql .
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:app-$IMAGE_TAG -f Dockerfile .
        
        # Unit test
        ## Create user-defined network
        docker network create my_app_network
        ## Run my_db
        docker run -d --name my_db --network my_app_network -e MYSQL_ROOT_PASSWORD=pw  my_db
        ## Setup env variables
        export DBHOST=$(docker inspect -f '{{.NetworkSettings.Networks.my_app_network.IPAddress}}' my_db)
        export DBPORT=3306
        export DBUSER=root
        export DATABASE=employees
        export DBPWD=pw
        ## Run 3 apps blue, pink and lime
        docker run -d --name my_app_blue --network my_app_network -p 8081:8080  -e DBHOST=$DBHOST -e DBPORT=$DBPORT -e  DBUSER=$DBUSER -e DBPWD=$DBPWD  -e APP_COLOR="blue" my_app
        docker run -d --name my_app_pink --network my_app_network -p 8082:8080  -e DBHOST=$DBHOST -e DBPORT=$DBPORT -e  DBUSER=$DBUSER -e DBPWD=$DBPWD  -e APP_COLOR="pink" my_app
        docker run -d --name my_app_lime --network my_app_network -p 8083:8080  -e DBHOST=$DBHOST -e DBPORT=$DBPORT -e  DBUSER=$DBUSER -e DBPWD=$DBPWD  -e APP_COLOR="lime" my_app
        ## Test app blue
        curl localhost:8081 -vvv
        ## Test app pink
        curl localhost:8082 -vvv
        ## Test app lime
        curl localhost:8083 -vvv
        
        # Publish images to ECR 
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:mysql-$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:app-$IMAGE_TAG
